@import url(../includes/nucleo/outline/css/nucleo-outline.css);
@import url(../includes/nucleo/mini/css/nucleo-mini.css);
@import url(../includes/nucleo/glyph/css/nucleo-glyph.css);

@import "skincolor";
@import "skinbackground";
@import "skinmenu";
/* */
$dark_grey: #555;
$red: #c01700;
$white: #fff;
$fontsize_14: 1.076em;
$border_grey: 1px solid #dadada;
$light_grey: #999;
$light_grey_2: #aaa;
$light_grey_3: #ddd;

/*  */
.box_shadow {
  box-shadow: 0 0 5px #ccc;
  -webkit-box-shadow: 0 0 5px #ccc;
}
.border_radius{
  border-radius: 5px;
  -webkit-border-radius: 5px;
}

.font_oswald{
  font-family: 'oswaldregular';
}

/* BUTTON */

.form-actions .form-submit {
  margin: 0 10px 10px 0;
  border: none;
  padding: 8px 20px;
  color: #fff;
  background: $red;
  border-radius: 3px;
  -webkit-border-radius: 3px;
  cursor: pointer;
  &:hover, &:focus {
    background-color: $dark_grey;
  }
}

@mixin nucleo_outline {
    display: inline-block;
    font-family: "Nucleo Outline";
    font-style: normal;
    font-weight: normal;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin nucleo_mini {
    display: inline-block;
    font-family: "Nucleo Mini";
    font-style: normal;
    font-weight: normal;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin nucleo_glyph {
    display: inline-block;
    font-family: "Nucleo Glyph";
    font-style: normal;
    font-weight: normal;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin clearfix{
  &:after{
    content: ".";
    clear: both;
    display: block;
    visibility: hidden;
    height: 0;
  }
}

@mixin transition($time...) {
    -webkit-transition: $time;
    -moz-transition: $time;
    -o-transition: $time;
    transition: $time;
}

@mixin scale($scale-size, $milisecond) {
    -moz-transform: scale($scale-size, $scale-size);
    -moz-transition-duration: $milisecond;
    -webkit-transform: scale($scale-size, $scale-size);
    -webkit-transition-duration: $milisecond;
    -ms-transform: scale($scale-size, $milisecond);
    -ms-transition-duration: $milisecond;
}

@mixin translate($val...) {
    -webkit-transform: translate($val);
    -moz-transform: translate($val);
    -o-transform: translate($val);
    transform: translate($val);
}